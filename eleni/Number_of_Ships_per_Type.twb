<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (query1-2)' inline='true' name='federated.1ybhyco0e530ru155rcqf0gh623c' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='query1-2' name='excel-direct.1uby7nj1v66fme14xijj30v3qjgw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Desktop/ABDM GIT/Number_of_Ships_per_Type.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1uby7nj1v66fme14xijj30v3qjgw' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B28:no:A1:B28:0' header='yes' outcome='6'>
            <column datatype='integer' name='Sum of ships' ordinal='0' />
            <column datatype='string' name='Type of ship' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Sum of ships</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sum of ships]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sum of ships</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of ship</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of ship]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Type of ship</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B28:no:A1:B28:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Type of ship (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Type of ship]' new-bin='true'>
          <bin default-name='false' value='&quot;Cargo Ships&quot;'>
            <value>&quot;Cargo&quot;</value>
            <value>&quot;Cargo - Hazard A (Major)&quot;</value>
            <value>&quot;Cargo - Hazard B&quot;</value>
            <value>&quot;Cargo - Hazard C (Minor)&quot;</value>
            <value>&quot;Cargo - Hazard D (Recognizable)&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Tanker Ships&quot;'>
            <value>&quot;Tanker&quot;</value>
            <value>&quot;Tanker - Hazard A (Major)&quot;</value>
            <value>&quot;Tanker - Hazard B&quot;</value>
            <value>&quot;Tanker - Hazard C (Minor)&quot;</value>
            <value>&quot;Tanker - Hazard D (Recognizable)&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Type of ship]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.501825' measure-ordering='alphabetic' measure-percentage='0.498175' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Greece&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='ShipsPerType'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Regular'>Number of Ships per Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (query1-2)' name='federated.1ybhyco0e530ru155rcqf0gh623c' />
          </datasources>
          <datasource-dependencies datasource='federated.1ybhyco0e530ru155rcqf0gh623c'>
            <column datatype='integer' name='[Sum of ships]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type of ship (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Type of ship]' new-bin='true'>
                <bin default-name='false' value='&quot;Cargo Ships&quot;'>
                  <value>&quot;Cargo&quot;</value>
                  <value>&quot;Cargo - Hazard A (Major)&quot;</value>
                  <value>&quot;Cargo - Hazard B&quot;</value>
                  <value>&quot;Cargo - Hazard C (Minor)&quot;</value>
                  <value>&quot;Cargo - Hazard D (Recognizable)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tanker Ships&quot;'>
                  <value>&quot;Tanker&quot;</value>
                  <value>&quot;Tanker - Hazard A (Major)&quot;</value>
                  <value>&quot;Tanker - Hazard B&quot;</value>
                  <value>&quot;Tanker - Hazard C (Minor)&quot;</value>
                  <value>&quot;Tanker - Hazard D (Recognizable)&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Type of ship]' role='dimension' type='nominal' />
            <column-instance column='[Sum of ships]' derivation='Sum' name='[sum:Sum of ships:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ybhyco0e530ru155rcqf0gh623c].[sum:Sum of ships:qk]' field-type='quantitative' range-type='uniform' scale='log' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ybhyco0e530ru155rcqf0gh623c].[sum:Sum of ships:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ybhyco0e530ru155rcqf0gh623c].[sum:Sum of ships:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#79706e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ybhyco0e530ru155rcqf0gh623c].[sum:Sum of ships:qk]</rows>
        <cols>[federated.1ybhyco0e530ru155rcqf0gh623c].[Type of ship (group)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='ShipsPerType'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ybhyco0e530ru155rcqf0gh623c].[Type of ship (group)]</field>
            <field>[federated.1ybhyco0e530ru155rcqf0gh623c].[none:Sum of ships:ok]</field>
            <field>[federated.1ybhyco0e530ru155rcqf0gh623c].[none:Type of ship:nk]</field>
            <field>[federated.1ybhyco0e530ru155rcqf0gh623c].[sum:Sum of ships:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ShipsPerType' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
