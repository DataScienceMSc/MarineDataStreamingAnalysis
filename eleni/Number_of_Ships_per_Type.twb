<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (query1-2)' inline='true' name='federated.1ybhyco0e530ru155rcqf0gh623c' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='query1-2' name='excel-direct.1uby7nj1v66fme14xijj30v3qjgw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Desktop/ABDM GIT/MarineDataStreamingAnalysis/eleni/Number_of_Ships_per_Type.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1uby7nj1v66fme14xijj30v3qjgw' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B28:no:A1:B28:0' header='yes' outcome='6'>
            <column datatype='integer' name='Sum of ships' ordinal='0' />
            <column datatype='string' name='Type of ship' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Sum of ships</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sum of ships]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sum of ships</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of ship</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of ship]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Type of ship</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B28:no:A1:B28:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Type of ship (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Type of ship]' new-bin='true'>
          <bin default-name='false' value='&quot;Cargo Ships&quot;'>
            <value>&quot;Cargo&quot;</value>
            <value>&quot;Cargo - Hazard A (Major)&quot;</value>
            <value>&quot;Cargo - Hazard B&quot;</value>
            <value>&quot;Cargo - Hazard C (Minor)&quot;</value>
            <value>&quot;Cargo - Hazard D (Recognizable)&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Tanker Ships&quot;'>
            <value>&quot;Tanker&quot;</value>
            <value>&quot;Tanker - Hazard A (Major)&quot;</value>
            <value>&quot;Tanker - Hazard B&quot;</value>
            <value>&quot;Tanker - Hazard C (Minor)&quot;</value>
            <value>&quot;Tanker - Hazard D (Recognizable)&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Type of ship]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.501825' measure-ordering='alphabetic' measure-percentage='0.498175' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Greece&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='ShipsPerType'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Regular'>Number of Ships per Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (query1-2)' name='federated.1ybhyco0e530ru155rcqf0gh623c' />
          </datasources>
          <datasource-dependencies datasource='federated.1ybhyco0e530ru155rcqf0gh623c'>
            <column datatype='integer' name='[Sum of ships]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type of ship (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Type of ship]' new-bin='true'>
                <bin default-name='false' value='&quot;Cargo Ships&quot;'>
                  <value>&quot;Cargo&quot;</value>
                  <value>&quot;Cargo - Hazard A (Major)&quot;</value>
                  <value>&quot;Cargo - Hazard B&quot;</value>
                  <value>&quot;Cargo - Hazard C (Minor)&quot;</value>
                  <value>&quot;Cargo - Hazard D (Recognizable)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tanker Ships&quot;'>
                  <value>&quot;Tanker&quot;</value>
                  <value>&quot;Tanker - Hazard A (Major)&quot;</value>
                  <value>&quot;Tanker - Hazard B&quot;</value>
                  <value>&quot;Tanker - Hazard C (Minor)&quot;</value>
                  <value>&quot;Tanker - Hazard D (Recognizable)&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Type of ship]' role='dimension' type='nominal' />
            <column-instance column='[Sum of ships]' derivation='Sum' name='[sum:Sum of ships:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ybhyco0e530ru155rcqf0gh623c].[sum:Sum of ships:qk]' field-type='quantitative' range-type='uniform' scale='log' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ybhyco0e530ru155rcqf0gh623c].[sum:Sum of ships:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ybhyco0e530ru155rcqf0gh623c].[sum:Sum of ships:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ybhyco0e530ru155rcqf0gh623c].[sum:Sum of ships:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#79706e' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ybhyco0e530ru155rcqf0gh623c].[sum:Sum of ships:qk]</rows>
        <cols>[federated.1ybhyco0e530ru155rcqf0gh623c].[Type of ship (group)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='ShipsPerType'>
      <cards>
        <edge name='left'>
          <strip size='312'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ybhyco0e530ru155rcqf0gh623c].[Type of ship (group)]</field>
            <field>[federated.1ybhyco0e530ru155rcqf0gh623c].[none:Sum of ships:ok]</field>
            <field>[federated.1ybhyco0e530ru155rcqf0gh623c].[none:Type of ship:nk]</field>
            <field>[federated.1ybhyco0e530ru155rcqf0gh623c].[sum:Sum of ships:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ShipsPerType' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
